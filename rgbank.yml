---
#Provision some instances:
- hosts: localhost
  connection: local
  gather_facts: False

  vars_files:
  - group_vars/all
  - group_vars/aws_credentials
  - group_vars/lbservers
  - group_vars/webservers
  - group_vars/dbservers
  - group_vars/monservers

  tasks:
  - name: Launch webserver instances
    ec2:
     access_key: "{{ ec2_access_key }}"
     secret_key: "{{ ec2_secret_key }}"
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_webservers_security_group }}"
     type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     region: "{{ec2_region}}"
     assign_public_ip: yes
     vpc_subnet_id: "{{ec2_subnet_id}}"
     zone: "{{ec2_availability_zone}}"
     instance_tags: 
       ansible_group: "{{ ec2_tag_webservers }}"
       type: "{{ ec2_instance_type }}"
       group: "{{ ec2_webservers_security_group }}"
     count: "{{ ec2_webservers_count }}"
     wait: yes
    register: ec2_web

  - name: Launch database instance
    ec2:
     access_key: "{{ ec2_access_key }}"
     secret_key: "{{ ec2_secret_key }}"
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_db_security_group }}"
     type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     vpc_subnet_id: "{{ec2_subnet_id}}"
     zone: "{{ec2_availability_zone}}"
     instance_tags:
       ansible_group: "{{ ec2_tag_dbservers }}"
       type: "{{ ec2_instance_type }}"
       group: "{{ ec2_db_security_group }}"
     count: 1
     wait: yes
    register: ec2_db

  - name: Launch load balancing instance
    ec2:
     access_key: "{{ ec2_access_key }}"
     secret_key: "{{ ec2_secret_key }}"
     keypair: "{{ ec2_keypair }}"
     group: "{{ ec2_lb_security_group }}"
     type: "{{ ec2_instance_type }}"
     image: "{{ ec2_image }}"
     region: "{{ ec2_region }}"
     assign_public_ip: yes
     vpc_subnet_id: "{{ec2_subnet_id}}"
     zone: "{{ec2_availability_zone}}"
     instance_tags: 
       ansible_group: "{{ ec2_tag_lbservers }}"
       type: "{{ ec2_instance_type }}"
       group: "{{ ec2_lb_security_group }}"
     count: 1
     wait: yes
    register: ec2_lb

  - name: Wait for SSH to come up
    local_action: wait_for host={{ item.public_dns_name }}
      port=22 delay=60 timeout=320 state=started
    with_items:
    - "{{ ec2_web.instances }}"
    - "{{ ec2_db.instances }}"
    - "{{ ec2_lb.instances }}"

  - name: Add all instance public IPs to host group
    add_host: hostname={{ item.public_ip }} groups=ec2hosts
    with_items: 
    - "{{ ec2_web.instances }}"
    - "{{ ec2_db.instances }}"
    - "{{ ec2_lb.instances }}"

  - name: Add all instance public IPs to webservers host group
    add_host: hostname={{ item.public_ip }} groups=webservers
    with_items: "{{ ec2_web.instances }}"

  - name: Add all instance public IPs to db host group
    add_host: hostname={{ item.public_ip }} groups=dbservers
    with_items: "{{ ec2_db.instances }}"

  - name: Add all instance public IPs to lb host group
    add_host: hostname={{ item.public_ip }} groups=lbservers
    with_items: "{{ ec2_lb.instances }}"

- hosts: ec2hosts
  user: centos
  become: true
  roles:
  - common

- hosts: webservers
  user: centos
  become: true
  roles:
  - {role: mariadb }
  tags:
  - db

- hosts: dbservers
  user: centos
  become: true
  roles:
  - base-apache
  - web
  tags:
  - web

- hosts: lbservers
  user: centos
  become: true
  roles:
  - haproxy
  tags:
  - lb
